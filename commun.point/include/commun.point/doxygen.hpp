#pragma once

/**
 * \defgroup point commun.point
 * \brief This smart contract represents functions providing creation and circulation of points in a community, as well as their conversion to system tokens.
 * \details The main token on the commun platform is CMN token. A prerequisite for creating a community on this platform is the creation of a unique community point that will be used to reward users, leaders, and pay for services. Each community has its own point with its own name, which can be exchanged for CMN token or redeemed by performing the reverse operation. Point is not a token and cannot be used in exchange trading. Points are used as coins to encourage community members and applied only within the community, while CMN tokens can be circulated outside it within the commun application.

 * User creating a community has to transfer a certain amount of CMN tokens to the community account. These tokens are reserved for their subsequent exchange for points. The minimum number of CMN to create any community is one.

 * Buying or selling community points on CMN tokens is done through the community account. When buying points, a user spends CMN tokens, which are reserved and stored on the community account balance. If the purchased number of points is not on the balance, their missing number will be generated by \a commun.point contract. When selling points, they are withdrawn from circulation and user is paid corresponding amount of CMN. Exchange rate of community point to CMN token is adjusted when a number of points in circulation changes. Correction takes place in accordance with the Bancor algorithm implemented in the contract.

 * Current information about community points is stored in DB. Information about transfer operations on points is sent to the Event Engine in form of events.
 */

/**
 * \defgroup point_class Contract description
 * \ingroup point
 * \details The class contains actions for introducing points inside a community. All transactions for purchase and sale of points are carried out through the account \a c.point, on which the commun application is deployed.
 */

/**
 * \defgroup point_tables DB Stored structures
 * \ingroup point
 * \details Structures representing actual data related to points, stored in DB.
 */

/**
 * \defgroup point_events Events
 * \ingroup point
 * \details Events sent to the Event Engine by the \a commun.point contract.
 */

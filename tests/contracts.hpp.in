#pragma once
#include <eosio/testing/tester.hpp>

namespace eosio { namespace testing {

#define GOLOS_CONTRACTS "${CMAKE_BINARY_DIR}/../"
#define CYBERWAY_CONTRACTS "${CMAKE_BINARY_DIR}/../../cyberway.contracts/build/"

struct contracts {
    static std::vector<uint8_t> bancor_wasm() { return read_wasm(GOLOS_CONTRACTS "bancor.token/bancor.token.wasm"); }
    static std::vector<char>    bancor_abi()  { return read_abi (GOLOS_CONTRACTS "bancor.token/bancor.token.abi"); }

    static std::vector<uint8_t> system_wasm() { return read_wasm(CYBERWAY_CONTRACTS "eosio.system/eosio.system.wasm"); }
    static std::string          system_wast() { return read_wast(CYBERWAY_CONTRACTS "eosio.system/eosio.system.wast"); }
    static std::vector<char>    system_abi()  { return read_abi (CYBERWAY_CONTRACTS "eosio.system/eosio.system.abi"); }
    static std::vector<uint8_t> token_wasm()  { return read_wasm(CYBERWAY_CONTRACTS "eosio.token/eosio.token.wasm"); }
    static std::string          token_wast()  { return read_wast(CYBERWAY_CONTRACTS "eosio.token/eosio.token.wast"); }
    static std::vector<char>    token_abi()   { return read_abi (CYBERWAY_CONTRACTS "eosio.token/eosio.token.abi"); }
    static std::vector<uint8_t> msig_wasm()   { return read_wasm(CYBERWAY_CONTRACTS "eosio.msig/eosio.msig.wasm"); }
    static std::string          msig_wast()   { return read_wast(CYBERWAY_CONTRACTS "eosio.msig/eosio.msig.wast"); }
    static std::vector<char>    msig_abi()    { return read_abi (CYBERWAY_CONTRACTS "eosio.msig/eosio.msig.abi"); }
    static std::vector<uint8_t> wrap_wasm()   { return read_wasm(CYBERWAY_CONTRACTS "eosio.wrap/eosio.wrap.wasm"); }
    static std::string          wrap_wast()   { return read_wast(CYBERWAY_CONTRACTS "eosio.wrap/eosio.wrap.wast"); }
    static std::vector<char>    wrap_abi()    { return read_abi (CYBERWAY_CONTRACTS "eosio.wrap/eosio.wrap.abi"); }
    static std::vector<uint8_t> bios_wasm()   { return read_wasm(CYBERWAY_CONTRACTS "eosio.bios/eosio.bios.wasm"); }
    static std::string          bios_wast()   { return read_wast(CYBERWAY_CONTRACTS "eosio.bios/eosio.bios.wast"); }
    static std::vector<char>    bios_abi()    { return read_abi (CYBERWAY_CONTRACTS "eosio.bios/eosio.bios.abi"); }
};

}} // eosio::testing
